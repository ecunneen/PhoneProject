
#include "Arduino.h"
#include "SoftwareSerial.h" //Library to allow for serial communication over other digital pins.
#include "DFRobotDFPlayerMini.h" //DFPlayer Mini library. 

SoftwareSerial mySoftwareSerial(10, 11); // RX, TX for SD card player
DFRobotDFPlayerMini myDFPlayer; //I don't actually know what this is doing. Maybe aliasing it or calling a specific function from the library? It breaks when I get rid of it.
void printDetail(uint8_t type, int value); //Sets up the function for error/status reporting.

int phoneSwitch = 2; //pin for the phone switch
int motor = 3; //pin for the ringer motor.
int switchState = 0; //storage for switch state
int led = 13;


void setup() {

  mySoftwareSerial.begin(9600); //starts serial using the software serial library
  Serial.begin(115200); //Starts different serial for status reporting

  Serial.println();
  Serial.println(F("DFRobot DFPlayer Mini Demo"));
  Serial.println(F("Initializing DFPlayer ... (May take 3~5 seconds)"));

  if (!myDFPlayer.begin(mySoftwareSerial)) {  //Use softwareSerial to communicate with mp3.
    Serial.println(F("Unable to begin:"));
    Serial.println(F("1.Please recheck the connection!"));
    Serial.println(F("2.Please insert the SD card!"));
    while (true);
  }
  Serial.println(F("DFPlayer Mini online."));

  myDFPlayer.volume(20);  //Set volume value. From 0 to 30

  pinMode(phoneSwitch, INPUT_PULLUP);
  pinMode(motor, OUTPUT);
  pinMode(led, OUTPUT);

}

void loop() {

  switchState = digitalRead(phoneSwitch);


  if (switchState == LOW) {   //code for binary switch state
    Serial.println("Switch is on");
    digitalWrite(led, HIGH);
    myDFPlayer.pause();
    delay(3000);
    ringer(); //runs the ringer code after a randomized delay.
    delay(2000);
  }
  else if (switchState == HIGH) { //if the switch is STATE then this will delay and then play mp3 file.
    digitalWrite(led, LOW);
    delay(1000);
    myDFPlayer.play(1);  //Play the first mp3
    delay(3000);
  }
  else {
    Serial.println("Shits broke");
    delay(50);
  }
}

void ringer() { //defines a single cycle of the ringer.
  analogWrite(motor, 255);    //Switch motor on
  delay(2000);                      //Wait 2 Seconds
}


void printDetail(uint8_t type, int value) {
  switch (type) {
    case TimeOut:
      Serial.println(F("Time Out!"));
      break;
    case WrongStack:
      Serial.println(F("Stack Wrong!"));
      break;
    case DFPlayerCardInserted:
      Serial.println(F("Card Inserted!"));
      break;
    case DFPlayerCardRemoved:
      Serial.println(F("Card Removed!"));
      break;
    case DFPlayerCardOnline:
      Serial.println(F("Card Online!"));
      break;
    case DFPlayerPlayFinished:
      Serial.print(F("Number:"));
      Serial.print(value);
      Serial.println(F(" Play Finished!"));
      break;
    case DFPlayerError:
      Serial.print(F("DFPlayerError:"));
      switch (value) {
        case Busy:
          Serial.println(F("Card not found"));
          break;
        case Sleeping:
          Serial.println(F("Sleeping"));
          break;
        case SerialWrongStack:
          Serial.println(F("Get Wrong Stack"));
          break;
        case CheckSumNotMatch:
          Serial.println(F("Check Sum Not Match"));
          break;
        case FileIndexOut:
          Serial.println(F("File Index Out of Bound"));
          break;
        case FileMismatch:
          Serial.println(F("Cannot Find File"));
          break;
        case Advertise:
          Serial.println(F("In Advertise"));
          break;
        default:
          break;
      }
      break;
    default:
      break;
  }
}
